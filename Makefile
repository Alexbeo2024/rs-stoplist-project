# =====================================
# Email SFTP Processor - Development Tools
# =====================================
# –£–¥–æ–±–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏ –∏ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞

.PHONY: help install clean lint format security test coverage pre-commit docker-up docker-down

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ
PYTHON := python3.11
PIP := pip
SRC_DIR := src
TEST_DIR := tests

# =====================================
# Help - –ø–æ–∫–∞–∑–∞—Ç—å –¥–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
# =====================================
help:
	@echo "üìã –î–æ—Å—Ç—É–ø–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã:"
	@echo ""
	@echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞:"
	@echo "  install           –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Å–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏"
	@echo "  install-dev       –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏"
	@echo "  clean             –û—á–∏—Å—Ç–∏—Ç—å –≤—Ä–µ–º–µ–Ω–Ω—ã–µ —Ñ–∞–π–ª—ã"
	@echo ""
	@echo "üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞:"
	@echo "  lint              –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –ª–∏–Ω—Ç–µ—Ä—ã"
	@echo "  format            –û—Ç—Ñ–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞—Ç—å –∫–æ–¥"
	@echo "  security          –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏"
	@echo "  type-check        –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤"
	@echo ""
	@echo "üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:"
	@echo "  test              –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ —Ç–µ—Å—Ç—ã"
	@echo "  test-unit         –ó–∞–ø—É—Å—Ç–∏—Ç—å —Ç–æ–ª—å–∫–æ unit —Ç–µ—Å—Ç—ã"
	@echo "  test-integration  –ó–∞–ø—É—Å—Ç–∏—Ç—å –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã–µ —Ç–µ—Å—Ç—ã"
	@echo "  coverage          –ê–Ω–∞–ª–∏–∑ –ø–æ–∫—Ä—ã—Ç–∏—è —Ç–µ—Å—Ç–∞–º–∏"
	@echo ""
	@echo "üîí Pre-commit hooks:"
	@echo "  pre-commit-install –£—Å—Ç–∞–Ω–æ–≤–∏—Ç—å pre-commit hooks"
	@echo "  pre-commit-run     –ó–∞–ø—É—Å—Ç–∏—Ç—å pre-commit –Ω–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–∞—Ö"
	@echo ""
	@echo "üê≥ Docker:"
	@echo "  docker-up         –ó–∞–ø—É—Å—Ç–∏—Ç—å Docker –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
	@echo "  docker-down       –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å Docker –æ–∫—Ä—É–∂–µ–Ω–∏–µ"
	@echo "  docker-build      –°–æ–±—Ä–∞—Ç—å Docker –æ–±—Ä–∞–∑"
	@echo ""
	@echo "‚úÖ –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏:"
	@echo "  check-all         –ó–∞–ø—É—Å—Ç–∏—Ç—å –≤—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ (lint + security + tests)"
	@echo "  ci                –ò–º–∏—Ç–∞—Ü–∏—è CI pipeline"

# =====================================
# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞
# =====================================
install:
	$(PIP) install -r requirements.txt

install-dev: install
	$(PIP) install -e .
	$(MAKE) pre-commit-install

clean:
	@echo "üßπ –û—á–∏—Å—Ç–∫–∞ –≤—Ä–µ–º–µ–Ω–Ω—ã—Ö —Ñ–∞–π–ª–æ–≤..."
	find . -type f -name "*.pyc" -delete
	find . -type d -name "__pycache__" -delete
	find . -type d -name "*.egg-info" -exec rm -rf {} +
	find . -type f -name ".coverage" -delete
	rm -rf htmlcov/
	rm -rf .pytest_cache/
	rm -rf .mypy_cache/
	rm -rf .ruff_cache/
	rm -rf build/
	rm -rf dist/
	@echo "‚úÖ –û—á–∏—Å—Ç–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# =====================================
# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∫–æ–¥–∞
# =====================================
lint:
	@echo "üîç –ó–∞–ø—É—Å–∫ –ª–∏–Ω—Ç–µ—Ä–æ–≤..."
	ruff check $(SRC_DIR) $(TEST_DIR)
	@echo "‚úÖ Ruff –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

format:
	@echo "‚ú® –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–¥–∞..."
	black $(SRC_DIR) $(TEST_DIR)
	isort $(SRC_DIR) $(TEST_DIR)
	@echo "‚úÖ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ"

security:
	@echo "üîí –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏..."
	bandit -r $(SRC_DIR) -c pyproject.toml -f text
	@echo "‚úÖ Bandit –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

type-check:
	@echo "üìù –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∏–ø–æ–≤..."
	mypy $(SRC_DIR) --config-file pyproject.toml
	@echo "‚úÖ MyPy –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"

# =====================================
# –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
# =====================================
test:
	@echo "üß™ –ó–∞–ø—É—Å–∫ –≤—Å–µ—Ö —Ç–µ—Å—Ç–æ–≤..."
	pytest $(TEST_DIR) -v

test-unit:
	@echo "üß™ –ó–∞–ø—É—Å–∫ unit —Ç–µ—Å—Ç–æ–≤..."
	pytest $(TEST_DIR) -v -m "not integration"

test-integration:
	@echo "üß™ –ó–∞–ø—É—Å–∫ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏–æ–Ω–Ω—ã—Ö —Ç–µ—Å—Ç–æ–≤..."
	APP_ENV=test pytest $(TEST_DIR)/integration/ -v

coverage:
	@echo "üìä –ê–Ω–∞–ª–∏–∑ –ø–æ–∫—Ä—ã—Ç–∏—è —Ç–µ—Å—Ç–∞–º–∏..."
	pytest $(TEST_DIR) --cov=$(SRC_DIR) --cov-report=html --cov-report=term-missing
	@echo "üìã –û—Ç—á–µ—Ç —Å–æ—Ö—Ä–∞–Ω–µ–Ω –≤ htmlcov/index.html"

# =====================================
# Pre-commit hooks
# =====================================
pre-commit-install:
	@echo "üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ pre-commit hooks..."
	pre-commit install
	@echo "‚úÖ Pre-commit hooks —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"

pre-commit-run:
	@echo "üîç –ó–∞–ø—É—Å–∫ pre-commit –Ω–∞ –≤—Å–µ—Ö —Ñ–∞–π–ª–∞—Ö..."
	pre-commit run --all-files

# =====================================
# Docker
# =====================================
docker-up:
	@echo "üê≥ –ó–∞–ø—É—Å–∫ Docker –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
	docker-compose up -d

docker-down:
	@echo "üê≥ –û—Å—Ç–∞–Ω–æ–≤–∫–∞ Docker –æ–∫—Ä—É–∂–µ–Ω–∏—è..."
	docker-compose down

docker-build:
	@echo "üê≥ –°–±–æ—Ä–∫–∞ Docker –æ–±—Ä–∞–∑–∞..."
	docker-compose build

# =====================================
# –ö–æ–º–ø–ª–µ–∫—Å–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–∫–∏
# =====================================
check-all: format lint type-check security test
	@echo "‚úÖ –í—Å–µ –ø—Ä–æ–≤–µ—Ä–∫–∏ –∑–∞–≤–µ—Ä—à–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!"

ci: lint type-check security test-unit
	@echo "üöÄ CI pipeline –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!"

# =====================================
# –í—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–µ –∫–æ–º–∞–Ω–¥—ã
# =====================================
deps-update:
	@echo "üì¶ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	$(PIP) list --outdated
	@echo "üí° –î–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è: pip install --upgrade <package_name>"

deps-audit:
	@echo "üîç –ê—É–¥–∏—Ç –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."
	pip-audit --requirement requirements.txt

# =====================================
# –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞
# =====================================
run-dev:
	@echo "üöÄ –ó–∞–ø—É—Å–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –≤ —Ä–µ–∂–∏–º–µ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–∏..."
	uvicorn src.application.api.main:app --reload --host 0.0.0.0 --port 8000

logs:
	@echo "üìã –ü–æ–∫–∞–∑ –ª–æ–≥–æ–≤ Docker –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–æ–≤..."
	docker-compose logs -f

# =====================================
# –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥
# =====================================
metrics:
	@echo "üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –º–µ—Ç—Ä–∏–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è..."
	curl -s http://localhost:8000/metrics | head -n 20

health:
	@echo "üè• –ü—Ä–æ–≤–µ—Ä–∫–∞ health status..."
	curl -s http://localhost:8000/health/detailed | python -m json.tool
